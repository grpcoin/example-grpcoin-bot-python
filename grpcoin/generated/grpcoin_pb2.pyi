"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TradeAction(_TradeAction, metaclass=_TradeActionEnumTypeWrapper):
    pass
class _TradeAction:
    V = typing.NewType('V', builtins.int)
class _TradeActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TradeAction.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNDEFINED = TradeAction.V(0)
    BUY = TradeAction.V(1)
    """Buy a cryptocurrency using cash holdings."""

    SELL = TradeAction.V(2)
    """Sell a cryptocurrency for cash holdings."""


UNDEFINED = TradeAction.V(0)
BUY = TradeAction.V(1)
"""Buy a cryptocurrency using cash holdings."""

SELL = TradeAction.V(2)
"""Sell a cryptocurrency for cash holdings."""

global___TradeAction = TradeAction


class Currency(google.protobuf.message.Message):
    """Currency represents a cryptocurrency."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SYMBOL_FIELD_NUMBER: builtins.int
    symbol: typing.Text = ...
    """e.g. 'BTC' see ListSupportedCurrencies API for a full list."""

    def __init__(self,
        *,
        symbol : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["symbol",b"symbol"]) -> None: ...
global___Currency = Currency

class Amount(google.protobuf.message.Message):
    """Amount represents a fractional number precisely without
    as opposed to losing precision due to float representation.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UNITS_FIELD_NUMBER: builtins.int
    NANOS_FIELD_NUMBER: builtins.int
    units: builtins.int = ...
    """The integral part of the amount.
    For example, 3.50 will have `units`=3.
    """

    nanos: builtins.int = ...
    """Number of nano (10^-9) units that represent the fractional amount.
    For example, 3.5 is represented as `units`=3 and `nanos`=500,000,000.

    `nanos` must be between -999,999,999 and +999,999,999 inclusive.

    If `units` is positive, `nanos` must be positive or zero.
    If `units` is zero, `nanos` can be positive, zero, or negative.
    If `units` is negative, `nanos` must be negative or zero.
    For example, -1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
    """

    def __init__(self,
        *,
        units : builtins.int = ...,
        nanos : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["nanos",b"nanos","units",b"units"]) -> None: ...
global___Amount = Amount

class TickerWatchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CURRENCY_FIELD_NUMBER: builtins.int
    @property
    def currency(self) -> global___Currency: ...
    def __init__(self,
        *,
        currency : typing.Optional[global___Currency] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["currency",b"currency"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["currency",b"currency"]) -> None: ...
global___TickerWatchRequest = TickerWatchRequest

class Quote(google.protobuf.message.Message):
    """Quote represents a real-time coin price."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    T_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    @property
    def t(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def price(self) -> global___Amount: ...
    def __init__(self,
        *,
        t : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        price : typing.Optional[global___Amount] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["price",b"price","t",b"t"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["price",b"price","t",b"t"]) -> None: ...
global___Quote = Quote

class TestAuthRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___TestAuthRequest = TestAuthRequest

class TestAuthResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USER_ID_FIELD_NUMBER: builtins.int
    user_id: typing.Text = ...
    def __init__(self,
        *,
        user_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_id",b"user_id"]) -> None: ...
global___TestAuthResponse = TestAuthResponse

class PortfolioRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___PortfolioRequest = PortfolioRequest

class PortfolioResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CASH_USD_FIELD_NUMBER: builtins.int
    POSITIONS_FIELD_NUMBER: builtins.int
    @property
    def cash_usd(self) -> global___Amount:
        """User's cash holdings in USD."""
        pass
    @property
    def positions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PortfolioPosition]:
        """User's cryptocurrency positions."""
        pass
    def __init__(self,
        *,
        cash_usd : typing.Optional[global___Amount] = ...,
        positions : typing.Optional[typing.Iterable[global___PortfolioPosition]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cash_usd",b"cash_usd"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cash_usd",b"cash_usd","positions",b"positions"]) -> None: ...
global___PortfolioResponse = PortfolioResponse

class PortfolioPosition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CURRENCY_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    @property
    def currency(self) -> global___Currency: ...
    @property
    def amount(self) -> global___Amount: ...
    def __init__(self,
        *,
        currency : typing.Optional[global___Currency] = ...,
        amount : typing.Optional[global___Amount] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["amount",b"amount","currency",b"currency"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount",b"amount","currency",b"currency"]) -> None: ...
global___PortfolioPosition = PortfolioPosition

class TradeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTION_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    action: global___TradeAction.V = ...
    @property
    def currency(self) -> global___Currency: ...
    @property
    def quantity(self) -> global___Amount: ...
    def __init__(self,
        *,
        action : global___TradeAction.V = ...,
        currency : typing.Optional[global___Currency] = ...,
        quantity : typing.Optional[global___Amount] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["currency",b"currency","quantity",b"quantity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","currency",b"currency","quantity",b"quantity"]) -> None: ...
global___TradeRequest = TradeRequest

class TradeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Portfolio(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        REMAINING_CASH_FIELD_NUMBER: builtins.int
        POSITIONS_FIELD_NUMBER: builtins.int
        @property
        def remaining_cash(self) -> global___Amount:
            """Cash left after trade in USD available to trade"""
            pass
        @property
        def positions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PortfolioPosition]:
            """Updated list of positions"""
            pass
        def __init__(self,
            *,
            remaining_cash : typing.Optional[global___Amount] = ...,
            positions : typing.Optional[typing.Iterable[global___PortfolioPosition]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["remaining_cash",b"remaining_cash"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["positions",b"positions","remaining_cash",b"remaining_cash"]) -> None: ...

    T_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    EXECUTED_PRICE_FIELD_NUMBER: builtins.int
    RESULTING_PORTFOLIO_FIELD_NUMBER: builtins.int
    @property
    def t(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    action: global___TradeAction.V = ...
    @property
    def currency(self) -> global___Currency: ...
    @property
    def quantity(self) -> global___Amount: ...
    @property
    def executed_price(self) -> global___Amount: ...
    @property
    def resulting_portfolio(self) -> global___TradeResponse.Portfolio: ...
    def __init__(self,
        *,
        t : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        action : global___TradeAction.V = ...,
        currency : typing.Optional[global___Currency] = ...,
        quantity : typing.Optional[global___Amount] = ...,
        executed_price : typing.Optional[global___Amount] = ...,
        resulting_portfolio : typing.Optional[global___TradeResponse.Portfolio] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["currency",b"currency","executed_price",b"executed_price","quantity",b"quantity","resulting_portfolio",b"resulting_portfolio","t",b"t"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","currency",b"currency","executed_price",b"executed_price","quantity",b"quantity","resulting_portfolio",b"resulting_portfolio","t",b"t"]) -> None: ...
global___TradeResponse = TradeResponse

class ListSupportedCurrenciesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListSupportedCurrenciesRequest = ListSupportedCurrenciesRequest

class ListSupportedCurrenciesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUPPORTED_CURRENCIES_FIELD_NUMBER: builtins.int
    @property
    def supported_currencies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Currency]: ...
    def __init__(self,
        *,
        supported_currencies : typing.Optional[typing.Iterable[global___Currency]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["supported_currencies",b"supported_currencies"]) -> None: ...
global___ListSupportedCurrenciesResponse = ListSupportedCurrenciesResponse
